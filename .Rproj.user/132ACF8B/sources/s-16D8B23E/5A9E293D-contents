---
title: "data_cleaning&visualization"
author: "Wonhee Baek"
date: "4/30/2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
                      comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
```


## Pre

id 만들고 , 6200개의 곡 중에 중복제외하여 각 song 에 고유 번호 생성(song_id) 하였습니다. 특이한 것은 6200개의 노래 중에 중복된 것을 제외하면 686개의 곡의 남아있었습니다. 제가 틀린 걸까요?

```{r}
# library -----------------------------------------------------------------
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(forcats)
library(car)
library(ggplot2)


# data import -------------------------------------------------------------
data<-read_csv("~/data_science_project/data/2019.06~2019.12.csv")
#고유 번호(id)만들기
data$X1<-data$X1+1
names(data)[1]<-"id"

#data의 song의 id 만들기
only1<-data[which(!duplicated(data[,c("name","artist")])),] #duplicated_none
only1$song_id<-c(1:686)
only1<-subset(only1,select=c("name","artist","song_id"))
data<-left_join(data,only1,by=c("name","artist"))
```



## 변수 정리


1. rank_g: 나중에 사용할 것 같아서 한주에 200개의 곡을 10단위로 ranking: for문을 사용하지 못하여..이상하게 만들었으니 혹시 사용해야 하면 다른 방법으로 변경해야 할듯합니다. 
2. wks: 나중에 몇월 몇째주로 사용할 수 있을것 같아서 만들어 두었습니다. 
3. sex: femal, male, mixed 로 label만 변경
4. production: 회사가 201개나 되어서 일단 정리하지 못하였고, 나중에 1) 주식에 상장되었는지?(네이버 주식에서 확인 가능할듯) 2) 국가 데이터에 기업 정보에 직원수 등이 나와있으면 활용할 수 있을듯 합니다. 
5. distributor: 이것은 production과 다른것 같은데..20개 기업이 있어요. 정확히 뭔지 몰라서 패스합니다. 
6. genre_g: 건욱씨가 정리한 파일의 genre가 크게 두가지 정보인것 같아서 genre와 type으로 나누었고, genre는 다시 grouping하였습니다. 그러나 genre와 type의 개념이 겹치는 것이 있어서 (예를 들면, genre에서 ost이지만 이것이 발라드인지, 댄스곡인지 모르는 경우) 확인 바랍니다. 일단은 제 나름대로 그룹핑 하였습니다. 
7. runtime_g: runtime을 초로 바꾸어 quntile로 1st Qu./ 3rd Qu. 로 나누어 long, middle, short로 그룹핑하였습니다. 
8. active_type_g: 이것은 워낙 정리가 간단하였지만, solo와 nonsole로 나누었습니다. 

```{r}
data$rank_g<-ifelse(data$rank==c(1:10),1,
                    ifelse(data$rank==c(11:20),2,
                           ifelse(data$rank==c(21:30),3,
                                  ifelse(data$rank==c(31:40),4,
                                         ifelse(data$rank==c(41:50),5,
                                                ifelse(data$rank==c(51:60),6,
                                                       ifelse(data$rank==c(61:70),7,
                                                              ifelse(data$rank==c(71:80),8,
                                                                     ifelse(data$rank==c(81:90),9,
                                                                            ifelse(data$rank==c(91:100),10,
                                                                                   ifelse(data$rank==c(101:110),11,
                                                                                          ifelse(data$rank==c(111:120),12,
                                                                                                 ifelse(data$rank==c(121:130),13,
                                                                                                        ifelse(data$rank==c(131:140),14,
                                                                                                               ifelse(data$rank==c(141:150),15,
                                                                                                                      ifelse(data$rank==c(151:160),16,
                                                                                                                             ifelse(data$rank==c(161:170),17,
                                                                                                                                    ifelse(data$rank==c(171:180),18,
                                                                                                                                           ifelse(data$rank==c(181:190),19,20)))))))))))))))))))





# change to weeks variable ----------------------------------------------------
data<-data %>% separate(time,c("st_day","ed_day"),"~") 

data$st_day<-ymd(data$st_day)
data$ed_day<-ymd(data$ed_day)

data<- data %>% group_by(year(st_day)) %>% group_by(month(st_day)) %>% group_by(day(st_day))
names(data)[15]<-"yr"
names(data)[16]<-"mon"
names(data)[17]<-"day"
data<-data %>% group_by(yr) %>% group_by(mon) %>% mutate(num=dense_rank(day)) 
data$yr<-substr(data$yr,3,4)
data$mon<-ifelse(str_count(data$mon)==1,paste0(0,data$mon),data$mon)
data$wks<-paste0(data$yr,data$mon,"_",data$num,"wk") #In what weeks of the month?

# sex ---------------------------------------------------------------------
data$sex<- fct_recode(data$sex,male="남성",female="여성",mixed="혼성")

ggplot(data,aes(x=sex))+
  geom_bar(fill=c("sky blue","pink","orange"))

ggplot(data,aes(x=sex,y=rank))+
  geom_boxplot(fill=c("sky blue","pink","orange"))

# production --------------------------------------------------------------정리안함
dim(addmargins(table(data$production)))

# distributor -------------------------------------------------------------
dim(addmargins(table(data$distributor)))


# genre -------------------------------------------------------------------
table(data$genre)
A<-str_split_fixed(data$genre,"/ ",n=2)
A<-data.frame(A)
names(A)[1]<-"type"
names(A)[2]<-"gen"
data<-bind_cols(data,A)

data$type<-fct_recode(data$type,K_POP="가요 ",POP="POP ",OST="OST ",Others="그외장르 ") 
data$type<-fct_relevel(data$type,c("K_POP","POP","OST","Others"))
addmargins(table(data$type))

data$genre_g<-recode(data$gen,"'댄스'='Dance_etc';'락'='Dance_etc';'랩/힙합'='Dance_etc';'일렉트로니카'='Dance_etc';'캐롤'='Dance_etc';'트로트'='Dance_etc';
                              '발라드'='Balad_etc';'블루스/포크'='Balad_etc';'R&B/소울'='Balad_etc';'인디'='Balad_etc';
                              '드라마'='Others';'애니메이션/게임'='Others';'팝'='Others';'해외영화'='Others';'전체'='Others'")

ggplot(data,aes(x=type))+
  geom_bar(fill=c("LightSky Blue","pink","violet","orange"))

ggplot(data,aes(x=type,y=rank))+
  geom_boxplot(fill=c("LightSky Blue","pink","violet","orange"))

ggplot(data,aes(x=genre_g))+
  geom_bar(fill=c("LightSky Blue","pink","orange"))

ggplot(data,aes(x=genre_g,y=rank))+
  geom_boxplot(fill=c("LightSky Blue","pink","orange"))

# runtime -----------------------------------------------------------------
data$runtime<-substr(data$runtime,1,5)
data$runtime<-as.numeric(substr(data$runtime,1,2))*60+as.numeric(substr(data$runtime,4,5))

summary(data$runtime)
data$runtime_g<-as.factor(ifelse(data$runtime<=199,"Short",
                          ifelse(data$runtime>=241,"Long","Middle")))

ggplot(data,aes(x=runtime))+
  geom_histogram(fill="#F8766D",color="black",binwidth = 3.5)

ggplot(data,aes(x=runtime_g,y=rank))+
  geom_boxplot(fill="#F8766D",color="black")


# active_type -------------------------------------------------------------
data$active_type<-factor(data$active_type,levels=c("솔로","그룹","밴드","프로젝트","듀엣"),
                         labels=c("Solo","Group","Band","Project","Duet"))

table(data$active_type)

data$active_type_g<-as.factor(ifelse(data$active_type=="Solo","Solo","Non_solo"))


ggplot(data,aes(x=active_type))+
  geom_bar(fill=c("#D73027","#F46D43","#FDAE61","#FEE090","#FFFFBF"))

ggplot(data,aes(x=active_type_g))+
  geom_bar(fill=c("#F46D43","#D73027"))

ggplot(data,aes(x=active_type,y=rank))+
  geom_boxplot(fill=c("#D73027","#F46D43","#FDAE61","#FEE090","#FFFFBF"))

ggplot(data,aes(x=active_type_g,y=rank))+
  geom_boxplot(fill=c("#F46D43","#D73027"))


```


## 200위 자주 진입한 노래 확인 


6개월동안 200위에 진입한 노래 횟수를 카운트하여 많이 진입한 노래와 적게 진입한 노래의 특징을 확인해 보는 것도 좋을 것 같아서,  1st Qu./ 3rd Qu. 로 나누어 high(많이 진입), middle(중간 진입), low(적게 진입)으로 그룹핑하였습니다. 

```{r}
data$song_id<-factor(data$song_id)
a<-table(data$song_id)
A<-data.frame(a)
names(A)[1]<-"song_id"
names(A)[2]<-"song_freq"

ggplot(A,aes(x=song_freq))+
  geom_histogram(fill="#F8766D",color="black",binwidth = 1)

summary(A$song_freq)

A$song_freq_g<-factor(ifelse(A$song_freq<=2,"Low",
                      ifelse(A$song_freq>=13,"High","Middle")))
A$song_freq_g<-fct_relevel(A$song_freq_g,"High","Middle","Low")

data<-left_join(data,A,by="song_id")

ggplot(data,aes(x=song_freq_g))+
  geom_bar(aes(fill=genre_g))

ggplot(data,aes(x=song_freq_g))+
  geom_bar(aes(fill=sex))

ggplot(data,aes(x=song_freq_g))+
  geom_bar(aes(fill=runtime_g))

ggplot(data,aes(x=song_freq_g))+
  geom_bar(aes(fill=active_type_g))

```


